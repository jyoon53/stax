--[[
  Roblox LMS Integration Kit
  -----------------------------------------
  This standardized code snippet allows your Roblox game to send hierarchical progress data to your LMS.
  
  Data sent includes:
    - gameId: The identifier for the game (e.g., your satellite launching game).
    - lessonId: The identifier for a specific lesson.
    - exerciseId: The identifier for a specific exercise within the lesson.
    - studentId: The student's identifier (e.g., their Roblox username).
    - startTime: Unix timestamp when the exercise started.
    - endTime: Unix timestamp when the exercise was completed.
    - duration: The time in seconds it took to complete the exercise.
    - additionalData: (Optional) A table for extra details (e.g., score, hints used).

  IMPORTANT:
    - Enable HTTP requests in Roblox Studio (Game Settings → Security → Allow HTTP Requests).
    - Replace LMS_API_ENDPOINT with your actual LMS API URL.
  
  Example usage:
    -- When a student starts an exercise:
    local exerciseStartTime = os.time()
    
    -- When the exercise is completed, call the function:
    sendExerciseCompletionData(1, 101, 1001, "Player123", exerciseStartTime, os.time(), { score = 95, hintsUsed = 1 })
--]]

local HttpService = game:GetService("HttpService")
local LMS_API_ENDPOINT = "https://your-lms-domain.com/api/exercise/complete" -- Replace with your LMS endpoint URL

-- Function to send detailed exercise progress data
local function sendExerciseCompletionData(gameId, lessonId, exerciseId, studentId, startTime, endTime, additionalData)
    local duration = endTime - startTime
    local payload = {
        gameId = gameId,
        lessonId = lessonId,
        exerciseId = exerciseId,
        studentId = studentId,
        startTime = startTime,
        endTime = endTime,
        duration = duration,
        additionalData = additionalData or {}
    }
    
    local jsonPayload = HttpService:JSONEncode(payload)
    
    local success, response = pcall(function()
        return HttpService:PostAsync(LMS_API_ENDPOINT, jsonPayload, Enum.HttpContentType.ApplicationJson)
    end)
    
    if success then
        print("LMS Integration: Data sent successfully:", response)
    else
        warn("LMS Integration: Error sending data:", response)
    end
end

-- Example usage:
-- Capture the start time when an exercise begins
local exerciseStartTime = os.time()

-- Later, when the exercise is completed, call this function:
local function onExerciseComplete(gameId, lessonId, exerciseId, studentId, additionalData)
    local exerciseEndTime = os.time()  -- Capture end time
    sendExerciseCompletionData(gameId, lessonId, exerciseId, studentId, exerciseStartTime, exerciseEndTime, additionalData)
end

-- Simulate an exercise completion event:
onExerciseComplete(1, 101, 1001, "Player123", { score = 95, hintsUsed = 1 })
